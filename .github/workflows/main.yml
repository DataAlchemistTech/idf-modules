name: Static Checking

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main", "release/*", "stable"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  modules-network-basic-cdk:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -r modules/network/basic-cdk/requirements.txt
      - name: Static checks and linting (mypy, flake8, black, isort)
        run: scripts/validate.sh --language python --path modules/network/basic-cdk/
      - name: Pytest
        run: cd modules/network/basic-cdk/ && pytest
        
  modules-storage-buckets:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -r modules/storage/buckets/requirements.txt
      - name: Static checks and linting (mypy, flake8, black, isort)
        run: scripts/validate.sh --language python --path modules/storage/buckets/
      - name: Pytest
        run: cd modules/storage/buckets/ && pytest

  modules-storage-efs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -r modules/storage/efs/requirements.txt
      - name: Static checks and linting (mypy, flake8, black, isort)
        run: scripts/validate.sh --language python --path modules/storage/efs/
      - name: Pytest
        run: cd modules/storage/efs/ && pytest
  
  modules-storage-opensearch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -r modules/storage/opensearch/requirements.txt
      - name: Static checks and linting (mypy, flake8, black, isort)
        run: scripts/validate.sh --language python --path modules/storage/opensearch/
      - name: Pytest
        run: cd modules/storage/opensearch/ && pytest

  modules-storage-aws-batch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -r modules/compute/aws-batch/requirements.txt
      - name: Static checks and linting (mypy, flake8, black, isort)
        run: scripts/validate.sh --language python --path modules/compute/aws-batch/
      - name: Pytest
        run: cd modules/compute/aws-batch/ && pytest